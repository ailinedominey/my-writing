These user personas are based on the results of user interviews and represent distinct Salt user groups. 


<table>
  <tr>
   <td colspan="2" >
<h1>Architect Ari</h1>


   </td>
  </tr>
  <tr>
   <td colspan="2" ><strong>Perspective: DevOps architect, infrastructure engineer</strong>
   </td>
  </tr>
  <tr>
   <td colspan="2" ><strong>Goals</strong>
   </td>
  </tr>
  <tr>
   <td colspan="2" >
<ul>

<li>Developing long-term solutions, custom automation, and DevOps strategies to ensure systems remain robust, adaptable, and secure over time.

<li>Offering consultations to clients or advising stakeholders, leveraging Salt to provide valuable insights and solutions to complex infrastructure challenges.

<li>Training clients, collaborating with team members, or mentoring interns in the fundamentals of Salt.

<li>Engaging the community and actively contributing to discussions on issues and support. 
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td><strong>Values</strong>
   </td>
   <td><strong>Pain points</strong>
   </td>
  </tr>
  <tr>
   <td>
<ul>

<li>Complex examples and case studies that offer in-depth insights into intricate scenarios.

<li>Customizability to tailor solutions to specific needs and opportunities to explore edge cases.

<li>Understanding the nuanced relationship between various Salt elements, including SaltStack Enterprise and open-source components.

<li>Context for use cases, going beyond procedural steps, that provide a holistic perspective on deployment and configuration management processes.
</li>
</ul>
   </td>
   <td>
<ul>

<li>Locating and retrieving buried code examples in community forums or Slack channels.

<li>Navigating a counterintuitive organizational structure for the state module documentation.

<li>Interacting with a code base where the structure of the underlying API makes it challenging to discover information programmatically.
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td><strong>Use case</strong>
   </td>
   <td><strong>Common Competencies</strong>
   </td>
  </tr>
  <tr>
   <td>
<ul>

<li>Writing states to define and manage the desired configurations of systems effectively.

<li>Scaling infrastructures efficiently to provision and configure machines to meet growing business needs.

<li>Automating to streamline repetitive tasks and enhance operational efficiency such as access control and permissions.

<li>Orchestrating to automate and manage continuous software deployment, ensuring efficient and consistent updates across infrastructures and a reliable delivery pipeline.

<li>Optimizing system configurations for better performance.

<li>Supporting meta-structures to maintain the underlying frameworks that enable seamless operations across infrastructures.
</li>
</ul>
   </td>
   <td>
<ul>

<li>Linux/Unix systems administration skills

<li>Windows systems administration skills

<li>Python and possibly additional languages (C#, Ruby, Pearl, etc.)

<li>IaC tools like Terraform or CloudFormation

<li>Containerization tools like Docker or Kubenetes

<li>Version Control tools like Git

<li>Templating and configuration skills like YAML/Jinja

<li>Command line interfaces
</li>
</ul>
   </td>
  </tr>
</table>

